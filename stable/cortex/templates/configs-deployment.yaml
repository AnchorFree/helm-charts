{{- if .Values.configs.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cortex.fullname" . }}-configs
  labels:
    app.kubernetes.io/name: {{ include "cortex.name" . }}
    helm.sh/chart: {{ include "cortex.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: configs
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.configs.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cortex.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: configs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cortex.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: configs
    spec:
      containers:
      - name: configs
        image: "{{ .Values.configs.image.repository }}:{{ .Values.configs.image.tag }}"
        imagePullPolicy: {{ .Values.configs.image.pullPolicy }}
        args:
        - -log.level=info
        - -server.http-listen-port=80
        - -database.uri={{ .Values.global.cortex.databaseURI }}
        - -database.migrations=/migrations
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
          {{- toYaml .Values.configs.resources | nindent 10 }}
      {{- with .Values.configs.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.configs.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.configs.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
