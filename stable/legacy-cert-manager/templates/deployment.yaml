---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      affinity:
        nodeAffinity:
{{ toYaml .Values.nodeAffinity | indent 10 }}
      initContainers:
      - name: s3pull
        image: {{ .Values.s3pull.image }}:{{ .Values.s3pull.tag }}
        args:
        - s3
        - sync
        - s3://$(S3_BUCKET)/
        - $(LOCAL_DIR)/
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-aws-secret
        env:
{{ toYaml .Values.env | indent 8 }}
        volumeMounts:
{{ toYaml .Values.volumeMounts | indent 8 }}
      containers:
      - name: legacy-cert-manager
        image: {{ .Values.image }}
        ports:
        - containerPort: 9375
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-aws-secret
        env:
{{ toYaml .Values.env | indent 8 }}
        volumeMounts:
{{ toYaml .Values.volumeMounts | indent 8 }}
      - name: s3push
        image: {{ .Values.s3push.image }}:{{ .Values.s3push.tag }}
        command:
        - /bin/bash
        args:
        - -c
        - while true ; do echo "[`date --rfc-3339=seconds`] sync"; aws s3 sync $(LOCAL_DIR)/ s3://$(S3_BUCKET)/; echo "[`date --rfc-3339=seconds`] sleep"; sleep {{ .Values.s3push.interval }}; done
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-aws-secret
        env:
{{ toYaml .Values.env | indent 8 }}
        volumeMounts:
{{ toYaml .Values.volumeMounts | indent 8 }}
      restartPolicy: Always
      volumes:
{{ toYaml .Values.volumes | indent 6 }}
